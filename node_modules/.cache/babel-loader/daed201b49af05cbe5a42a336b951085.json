{"ast":null,"code":"var _jsxFileName = \"/home/miriam/dev/sevann/CursoUdemy/PrensaEstudiantil/prensa-estudiantil/src/components/WeatherLocation/WeatherData/WeatherTemperature.js\";\nimport React from 'react'; // PropTypes\n\nimport PropTypes from 'prop-types'; // Constants\n\nimport { CLOUD, SUN, RAIN, SNOW, FOG, THUNDER, DRIZZLE } from './../../../constants/weather'; // Styles\n\nimport './styles.css'; // Icons\n\nimport WeatherIcons from 'react-weathericons'; // Icons dictionary\n\nconst icons = {\n  [SUN]: \"day-sunny\",\n  [FOG]: \"day-fog\",\n  [CLOUD]: \"cloud\",\n  // [CLOUDY]: \"cloudy\",\n  [RAIN]: \"rain\",\n  // [WINDY]: \"windy\",\n  [SNOW]: \"snow\",\n  [THUNDER]: \"day-thunderstore\",\n  [DRIZZLE]: \"day-showers\" // Get current weather icon\n\n};\n\nconst getWeatherIcon = weatherState => {\n  let icon = icons[weatherState]; // If icon is null or empty, return default icon\n\n  if (!icon) {\n    icon = icons['sun'];\n  }\n\n  return React.createElement(WeatherIcons, {\n    name: \"\".concat(icon),\n    className: \"wicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n};\n\nconst WeatherTemperature = ({\n  temperature,\n  weatherState\n}) => {\n  return React.createElement(\"div\", {\n    className: \"weather-temperature-cont container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"temperature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" \".concat(temperature, \" \")), React.createElement(\"span\", {\n    className: \"temperatureType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\xB0C \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, getWeatherIcon(weatherState))));\n};\n\nWeatherTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  weatherState: PropTypes.string.isRequired\n};\nexport default WeatherTemperature;","map":{"version":3,"sources":["/home/miriam/dev/sevann/CursoUdemy/PrensaEstudiantil/prensa-estudiantil/src/components/WeatherLocation/WeatherData/WeatherTemperature.js"],"names":["React","PropTypes","CLOUD","SUN","RAIN","SNOW","FOG","THUNDER","DRIZZLE","WeatherIcons","icons","getWeatherIcon","weatherState","icon","WeatherTemperature","temperature","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,OAAtC,EAA+CC,OAA/C,QAA8D,8BAA9D,C,CAEA;;AACA,OAAO,cAAP,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,oBAAzB,C,CAEA;;AACA,MAAMC,KAAK,GAAG;AACV,GAACP,GAAD,GAAO,WADG;AAEV,GAACG,GAAD,GAAO,SAFG;AAGV,GAACJ,KAAD,GAAS,OAHC;AAIV;AACA,GAACE,IAAD,GAAQ,MALE;AAMV;AACA,GAACC,IAAD,GAAQ,MAPE;AAQV,GAACE,OAAD,GAAW,kBARD;AASV,GAACC,OAAD,GAAW,aATD,CAYd;;AAZc,CAAd;;AAaA,MAAMG,cAAc,GAAGC,YAAY,IAAI;AACnC,MAAIC,IAAI,GAAGH,KAAK,CAACE,YAAD,CAAhB,CADmC,CAGnC;;AACA,MAAG,CAACC,IAAJ,EAAS;AACLA,IAAAA,IAAI,GAAGH,KAAK,CAAC,KAAD,CAAZ;AACH;;AAED,SACI,oBAAC,YAAD;AAAc,IAAA,IAAI,YAAKG,IAAL,CAAlB;AAA+B,IAAA,SAAS,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAXD;;AAaA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcH,EAAAA;AAAd,CAAD,KAAiC;AACxD,SACI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmCG,WAAnC,OADJ,EAEI;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,cAAc,CAACC,YAAD,CAAtB,CAHJ,CADJ,CADJ;AASH,CAVD;;AAYAE,kBAAkB,CAACE,SAAnB,GAA+B;AAC3BD,EAAAA,WAAW,EAAEd,SAAS,CAACgB,MAAV,CAAiBC,UADH;AAE3BN,EAAAA,YAAY,EAAEX,SAAS,CAACkB,MAAV,CAAiBD;AAFJ,CAA/B;AAKA,eAAeJ,kBAAf","sourcesContent":["import React from 'react';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// Constants\nimport { CLOUD, SUN, RAIN, SNOW, FOG, THUNDER, DRIZZLE } from './../../../constants/weather';\n\n// Styles\nimport './styles.css';\n\n// Icons\nimport WeatherIcons from 'react-weathericons';\n\n// Icons dictionary\nconst icons = {\n    [SUN]: \"day-sunny\",\n    [FOG]: \"day-fog\",\n    [CLOUD]: \"cloud\",\n    // [CLOUDY]: \"cloudy\",\n    [RAIN]: \"rain\",\n    // [WINDY]: \"windy\",\n    [SNOW]: \"snow\",\n    [THUNDER]: \"day-thunderstore\",\n    [DRIZZLE]: \"day-showers\"\n}\n\n// Get current weather icon\nconst getWeatherIcon = weatherState => {\n    let icon = icons[weatherState];\n\n    // If icon is null or empty, return default icon\n    if(!icon){\n        icon = icons['sun'];\n    }\n\n    return(\n        <WeatherIcons name={`${icon}`} className=\"wicon\" />\n    );\n}\n\nconst WeatherTemperature = ({temperature, weatherState}) => {\n    return (\n        <div className=\"weather-temperature-cont container\">  \n            <div className=\"row\">\n                <span className=\"temperature\">{` ${temperature} `}</span>\n                <span className=\"temperatureType\">{`Â°C `}</span>\n                <span>{ getWeatherIcon(weatherState) }</span>\n            </div>          \n        </div>\n    );\n};\n\nWeatherTemperature.propTypes = {\n    temperature: PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired\n}\n\nexport default WeatherTemperature;"]},"metadata":{},"sourceType":"module"}